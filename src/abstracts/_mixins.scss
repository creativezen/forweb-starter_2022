@use './functions';

@mixin fontFace($fontName, $fontFileName, $fontWeight, $fontStyle, $woff) {
	@font-face {
			font-display: swap;
			font-family: $fontName;
			src: local($fontName), url('../fonts/' + $fontFileName + "." + $woff) format($woff);
			font-weight: $fontWeight;
			font-style: $fontStyle;
	}
}

/*** Button mixins ***/

/**
 * Generate button style
 * $name - required
 * $background - required - format accepted: hsla, rgb, #
 * $color - optionnal - format accepted: hsla, rgb, #
 * If no $color specify, the 'set-text-color' function is called
 * go check the _function.scss
 */
 @mixin create-primary-type($name, $color, $background) {

	.button-primary--#{$name} {
		background: $background;
		@if ($color == '') {
			color: functions.set-text-color($background);
		} @else {
			color: $color;
		}
	}
}

@mixin letter-spacing($number, $fz) {
	letter-spacing: ($number * $fz * 0.001) + px
}

@mixin linear-gradient($direction, $fromColor, $toColor) {
	background-color: $toColor /* Fallback Color */;
	background-image: -webkit-gradient(linear, $direction, from($fromColor), to($toColor)); /* Saf4+, Chrome */
	background-image: -webkit-linear-gradient($direction, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
	background-image:    -moz-linear-gradient($direction, $fromColor, $toColor); /* FF3.6 */
	background-image:     -ms-linear-gradient($direction, $fromColor, $toColor); /* IE10 */
	background-image:      -o-linear-gradient($direction, $fromColor, $toColor); /* Opera 11.10+ */
	background-image:         linear-gradient($direction, $fromColor, $toColor);
}

@mixin pos-center() {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

@mixin pos-strech {
	position: absolute;
	top: 0;
	right: 0;
	left: 0;
	bottom: 0;
}


@function strip-units($number) {
	@return math.div($number, $number * 0 + 1);
}

@mixin responsive-tlt($minFz, $maxFz) {

		$raznostFz: strip-units($maxFz - $minFz);

		@media (max-width: 320px) {
			font-size: $minFz
		}
		@include media-breakpoint-only(xl) {
			font-size: $maxFz
		}
		@include media-breakpoint-between('320', lg) {
			font-size: calc(#{$minFz} + #{$raznostFz} * (100vw - 320px) / 790)
		}
}
